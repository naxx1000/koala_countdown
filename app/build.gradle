plugins {
	id 'com.android.application'
	id 'kotlin-android'
}

android {
	compileSdkVersion 30

	defaultConfig {
		applicationId "com.example.androiddevchallenge"
		minSdkVersion 23
		targetSdkVersion 30
		versionCode 1
		versionName "1.0"

		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
	}

	signingConfigs {
		// We use a bundled debug keystore, to allow debug builds from CI to be upgradable
		debug {
			storeFile rootProject.file('debug.keystore')
			storePassword 'android'
			keyAlias 'androiddebugkey'
			keyPassword 'android'
		}
	}

	buildTypes {
		debug {
			signingConfig signingConfigs.debug
		}
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
		}
	}

	kotlinOptions {
		jvmTarget = "1.8"
	}

	buildFeatures {
		compose true

		// Disable unused AGP features
		buildConfig false
		aidl false
		renderScript false
		resValues false
		shaders false
	}

	composeOptions {
		kotlinCompilerExtensionVersion compose_version
	}

	packagingOptions {
		// Multiple dependency bring these files in. Exclude them to enable
		// our test APK to build (has no effect on our AARs)
		excludes += "/META-INF/AL2.0"
		excludes += "/META-INF/LGPL2.1"
	}

	spotless {
		// optional: limit format enforcement to just the files changed by this feature branch
		ratchetFrom 'origin/main'

		format 'misc', {
			// define the files to apply `misc` to
			target '*.gradle', '*.md', '.gitignore'

			// define the steps to apply to those files
			trimTrailingWhitespace()
			indentWithTabs() // or spaces. Takes an integer argument if you don't like 4
			endWithNewline()
		}
		java {
			// don't need to set target, it is inferred from java

			// apply a specific flavor of google-java-format
			googleJavaFormat('1.8').aosp()
			// make sure every file has the following copyright header.
			// optionally, Spotless can set copyright years by digging
			// through git history (see "license" section below)
			licenseHeader '/* (C)$YEAR */'
		}
	}
}

dependencies {
	implementation 'androidx.core:core-ktx:1.3.2'
	implementation 'androidx.appcompat:appcompat:1.2.0'
	implementation 'com.google.android.material:material:1.3.0'
	implementation "androidx.activity:activity-compose:1.3.0-alpha03"
	implementation "androidx.compose.ui:ui:$compose_version"
	implementation "androidx.compose.material:material:$compose_version"
	implementation "androidx.compose.material:material-icons-extended:$compose_version"
	implementation "androidx.compose.ui:ui-tooling:$compose_version"
	implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.0'

	testImplementation 'junit:junit:4.13.2'

	androidTestImplementation 'androidx.test.ext:junit:1.1.2'
	androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
}
